{"version":3,"sources":["webpack://@fof/byobu/webpack/bootstrap","webpack://@fof/byobu/external \"flarum.core.compat['extend']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/ItemList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionComposer']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Discussion']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/User']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Button']\"","webpack://@fof/byobu/external \"flarum.core.compat['Model']\"","webpack://@fof/byobu/external \"flarum.core.compat['models/Group']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Switch']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Select']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/highlight']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/username']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extract']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionList']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/UserPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LinkButton']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/listItems']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/classList']\"","webpack://@fof/byobu/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/byobu/./src/forum/components/sources/UserSearchSource.js","webpack://@fof/byobu/./src/forum/components/sources/GroupSearchSource.js","webpack://@fof/byobu/./src/common/helpers/recipientLabel.js","webpack://@fof/byobu/./src/forum/components/RecipientSearch.js","webpack://@fof/byobu/./src/forum/components/AddRecipientModal.js","webpack://@fof/byobu/./src/common/helpers/recipientCountLabel.js","webpack://@fof/byobu/./src/forum/addRecipientComposer.js","webpack://@fof/byobu/./src/common/helpers/recipientsLabel.js","webpack://@fof/byobu/./src/forum/addRecipientLabels.js","webpack://@fof/byobu/./src/forum/addRecipientsControl.js","webpack://@fof/byobu/./src/forum/addHasRecipientsBadge.js","webpack://@fof/byobu/./src/forum/addDiscussPrivatelyControl.js","webpack://@fof/byobu/./src/forum/addPrivacySetting.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionList.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionsUserPage.js","webpack://@fof/byobu/./src/forum/addPrivateDiscussionsPage.js","webpack://@fof/byobu/./src/forum/components/PrivateDiscussionIndex.js","webpack://@fof/byobu/./src/forum/components/RecipientsModified.js","webpack://@fof/byobu/./src/forum/index.js","webpack://@fof/byobu/external \"flarum.core.compat['components/Modal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Search']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/avatar']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/extractText']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LoadingIndicator']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionListItem']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/DiscussionHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/DiscussionControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Badge']\"","webpack://@fof/byobu/external \"flarum.core.compat['utils/UserControls']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SettingsPage']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/Page']\"","webpack://@fof/byobu/external \"flarum.core.compat['helpers/icon']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/WelcomeHero']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/LogInModal']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/SelectDropdown']\"","webpack://@fof/byobu/external \"flarum.core.compat['components/EventPost']\""],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","_inheritsLoose","subClass","superClass","constructor","__proto__","UserSearchSource_UserSearchSource","search","query","app","store","find","filter","q","page","limit","view","toLowerCase","results","all","user","username","substr","length","className","translator","trans","map","username_default","children","highlight_default","data-index","id","avatar_default","GroupSearchSource_GroupSearchSource","group","namePlural","groupName","class","recipientLabel","recipient","attrs","style","label","link","extract_default","User_default","a","title","href","route","config","Group_default","RecipientSearch_RecipientSearch","isInitialized","_this","this","$search","$","on","e","target","addRecipient","data","focus","parentNode","_Search","_this2","loading","sources","sourceItems","toArray","props","selected","onclick","removeRecipient","classList_default","open","focused","active","loadingSources","element","type","placeholder","extractText_default","oninput","withAttr","onfocus","hasFocus","onblur","in","LoadingIndicator_default","component","size","source","items","ItemList_default","discussion","forum","attribute","canEditUserRecipients","add","canEditGroupRecipients","clear","redraw","values","split","findRecipient","remove","getById","Search_default","AddRecipientModal_AddRecipientModal","init","_Modal","prop","assignInitialRecipients","selectedRecipients","merge","session","recipientSearch","recipientUsers","recipientGroups","content","Button_default","disabled","icon","select","metaKey","ctrlKey","indexOf","index","submit","onsubmit","preventDefault","recipients","forEach","push","save","relationships","then","current","DiscussionPage_default","stream","update","modal","close","strategy","Modal_default","recipientCountLabel","count","transChoice","recipientsLabel","addRecipientsControl","external_flarum_core_compat_extend_","DiscussionControls_default","canEditRecipients","show","addHasRecipientsBadge","Discussion_default","badges","Badge_default","addDiscussPrivatelyControl","UserControls_default","blocksPd","deferred","DiscussionComposer_default","composer","load","resolve","promise","addPrivacySetting","SettingsPage_default","Switch_default","state","preferences","onchange","preferenceSaver","PrivateDiscussionList_PrivateDiscussionList","DiscussionList_default","PrivateDiscussionsUserPage_PrivateDiscussionsUserPage","_UserPage","loadUser","param","list","params","sort","refresh","render","UserPage_default","addPrivateDiscussionsPage","Number","routes","path","LinkButton_default","PrivateDiscussionIndex_PrivateDiscussionIndex","_Page","previous","lastDiscussion","PrivateDiscussionIndex","cache","privateDiscussionList","keys","some","history","icon_default","bodyClass","onunload","scrollTop","window","hero","listItems_default","sidebarItems","viewItems","actionItems","discussionList","context","apply","arguments","css","setTitle","setTitleCount","oldHeroHeight","heroHeight","outerHeight","height","scroll","setTimeout","$discussion","indexTop","indexBottom","discussionTop","offset","top","discussionBottom","WelcomeHero_default","canStartDiscussion","itemClassName","newDiscussion","SelectDropdown_default","navItems","buttonClassName","stickyParams","sortMap","sortOptions","Select_default","options","changeSort","markAllAsRead","searching","clearSearch","routeName","composeNewDiscussion","LogInModal_default","onlogin","confirm","readTime","Date","Page_default","RecipientsModified_RecipientsModified","initProps","diff","diff1","diff2","item","_EventPost","post","usersAdded","usersRemoved","groupsAdded","groupsRemoved","added","concat","removed","oldRecipients","newRecipients","descriptionKey","localeBase","descriptionData","initializers","private_discussions","external_flarum_core_compat_Model_default","hasMany","oldRecipientUsers","oldRecipientGroups","postComponents","recipientsModified","chooseRecipients","users","groups","addRecipientComposer","addToDiscussion","long","DiscussionListItem_default","include","DiscussionHero_default","addRecipientLabels"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 43);\n","module.exports = flarum.core.compat['extend'];","module.exports = flarum.core.compat['utils/ItemList'];","module.exports = flarum.core.compat['components/DiscussionComposer'];","module.exports = flarum.core.compat['models/Discussion'];","module.exports = flarum.core.compat['models/User'];","module.exports = flarum.core.compat['components/Button'];","module.exports = flarum.core.compat['Model'];","module.exports = flarum.core.compat['models/Group'];","module.exports = flarum.core.compat['components/DiscussionPage'];","module.exports = flarum.core.compat['components/Switch'];","module.exports = flarum.core.compat['components/Select'];","module.exports = flarum.core.compat['helpers/highlight'];","module.exports = flarum.core.compat['helpers/username'];","module.exports = flarum.core.compat['utils/extract'];","module.exports = flarum.core.compat['components/DiscussionList'];","module.exports = flarum.core.compat['components/UserPage'];","module.exports = flarum.core.compat['components/LinkButton'];","module.exports = flarum.core.compat['helpers/listItems'];","module.exports = flarum.core.compat['utils/classList'];","export default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  subClass.__proto__ = superClass;\n}","import highlight from 'flarum/helpers/highlight';\nimport avatar from 'flarum/helpers/avatar';\nimport username from 'flarum/helpers/username';\n\nexport default class UserSearchSource {\n    search(query) {\n        query = query + ' allows-pd';\n\n        return app.store.find('users', {\n            filter: {q: query},\n            page: {limit: 5}\n        });\n    }\n  \n    view(query) {\n        query = query.toLowerCase();\n      \n        const results = app.store.all('users')\n            .filter(user => user.username().toLowerCase().substr(0, query.length) === query);\n\n        if (!results.length) return '';\n\n        return [\n            <li className=\"Dropdown-header\">{app.translator.trans('core.forum.search.users_heading')}</li>,\n            results.map(user => {\n                const name = username(user);\n                name.children[0] = highlight(name.children[0], query);\n\n                return (\n                    <li className='SearchResult' data-index={'users:' + user.id()}>\n                        <a data-index={'users:' + user.id()}>\n                            {avatar(user)}\n                            {name}\n                        </a>\n                    </li>\n                );\n            })\n        ];\n    }\n}\n","import highlight from 'flarum/helpers/highlight';\n\nexport default class GroupSearchSource {\n    search(query) {\n        return app.store.find('groups', {\n            filter: {q: query},\n            page: {limit: 5}\n        });\n    }\n\n    view(query) {\n        query = query.toLowerCase();\n\n        const results = app.store.all('groups')\n            .filter(group => group.namePlural().toLowerCase().substr(0, query.length) === query);\n\n        if (!results.length) return '';\n\n        return [\n            <li className=\"Dropdown-header\">{app.translator.trans('fof-byobu.forum.search.headings.groups')}</li>,\n            results.map(group => {\n                const groupName = group.namePlural();\n                var name = highlight(groupName, query);\n\n                return (\n                    <li className=\"SearchResult\" data-index={'groups:' + group.id()}>\n                        <a data-index={'groups:' + group.id()}>\n                            <span class=\"groupName\">{name}</span>\n                        </a>\n                    </li>\n                );\n            })\n        ];\n    }\n}\n","import extract from 'flarum/utils/extract';\nimport username from 'flarum/helpers/username';\nimport User from 'flarum/models/User';\nimport Group from 'flarum/models/Group';\n\nexport default function recipientLabel(recipient, attrs = {}) {\n  attrs.style = attrs.style || {};\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\n\n  const link = extract(attrs, 'link');\n\n  var label;\n\n  if (recipient instanceof User) {\n      label = username(recipient);\n\n      if (link) {\n          attrs.title = recipient.username() || '';\n          attrs.href = app.route.user(recipient);\n          attrs.config = m.route;\n      }\n  } else if (recipient instanceof Group) {\n      label = recipient.namePlural();\n  } else {\n      attrs.className += ' none';\n      label = app.translator.trans('fof-byobu.forum.labels.user_deleted');\n  }\n\n  return (\n    m((link ? 'a' : 'span'), attrs,\n        <span className=\"RecipientLabel-text\">\n            {label}\n        </span>\n    )\n  );\n}\n","import Search from \"flarum/components/Search\";\nimport UserSearchSource from \"./sources/UserSearchSource\";\nimport GroupSearchSource from \"./sources/GroupSearchSource\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport classList from \"flarum/utils/classList\";\nimport extractText from \"flarum/utils/extractText\";\nimport LoadingIndicator from \"flarum/components/LoadingIndicator\";\nimport recipientLabel from \"../../common/helpers/recipientLabel\";\nimport User from \"flarum/models/User\";\nimport Group from \"flarum/models/Group\";\n\nexport default class RecipientSearch extends Search {\n\n    config(isInitialized) {\n        if (isInitialized) return;\n\n        const $search = this;\n\n        this.$('.Search-results').on('click', (e) => {\n            const target = this.$('.SearchResult.active')\n\n            $search.addRecipient(target.data('index'));\n            $search.$('.RecipientsInput').focus();\n        });\n\n        this.$('.Search-results').on('touchstart', (e) => {\n            const target = this.$(e.target.parentNode);\n\n            $search.addRecipient(target.data('index'));\n            $search.$('.RecipientsInput').focus();\n        });\n\n        super.config(isInitialized);\n    }\n\n    view() {\n        if (typeof this.value() === 'undefined') {\n            this.value('');\n        }\n\n        const loading = this.value() && this.value().length >= 3;\n\n        if (!this.sources) {\n            this.sources = this.sourceItems().toArray();\n        }\n\n        return m('div', {\n            className: 'AddRecipientModal-form-input'\n        }, [\n            m('div', {\n                className: 'RecipientsInput-selected RecipientsLabel'\n            }, this.props.selected().toArray().map(recipient =>\n                recipientLabel(recipient, {\n                    onclick: () => {\n                        this.removeRecipient(recipient);\n                    }\n                })\n            )),\n            m('input', {\n                className: 'RecipientsInput FormControl ' + classList({\n                    open: !!this.value(),\n                    focused: !!this.value(),\n                    active: !!this.value(),\n                    loading: !!this.loadingSources\n                }),\n                config: function (element) {\n                    element.focus();\n                },\n                type: 'search',\n                placeholder: extractText(app.translator.trans('fof-byobu.forum.input.search_recipients')),\n                value: this.value(),\n                oninput: m.withAttr('value', this.value),\n                onfocus: () => this.hasFocus = true,\n                onblur: () => this.hasFocus = false\n            }),\n            m('ul', {\n                className: 'Dropdown-menu Search-results fade ' + classList({\n                    in: !!loading\n                })\n            }, this.loadingSources\n                ? LoadingIndicator.component({size: 'tiny', className: 'Button Button--icon Button--link'})\n                : this.sources.map(source => source.view(this.value()))\n            )\n        ]);\n    }\n\n    /**\n     * Build an item list of SearchSources.\n     *\n     * @return {ItemList}\n     */\n    sourceItems() {\n        const items = new ItemList();\n\n        // Add user source based on permissions.\n        if (\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithUsers')) ||\n            (this.props.discussion && this.props.discussion.canEditUserRecipients())\n        ) {\n            items.add('users', new UserSearchSource());\n        }\n\n        // Add group source based on permissions.\n        if (\n            (!this.props.discussion && app.forum.attribute('canStartPrivateDiscussionWithGroups')) ||\n            (this.props.discussion && this.props.discussion.canEditGroupRecipients())\n        ) {\n            items.add('groups', new GroupSearchSource());\n        }\n\n        return items;\n    }\n\n\n    /**\n     * Clear the search input and the current controller's active search.\n     */\n    clear() {\n        this.value('');\n\n        m.redraw();\n    }\n\n    /**\n     * Adds a recipient.\n     *\n     * @param value\n     */\n    addRecipient(value) {\n\n        let values = value.split(':'),\n            type = values[0],\n            id = values[1];\n\n        let recipient = this.findRecipient(type, id);\n\n        this.props.selected().add(value, recipient);\n\n        this.clear();\n    }\n\n    /**\n     * Removes a recipient.\n     *\n     * @param recipient\n     */\n    removeRecipient(recipient) {\n        let type;\n\n        if (recipient instanceof User) {\n            type = 'users';\n        }\n        if (recipient instanceof Group) {\n            type = 'groups';\n        }\n\n        this.props.selected().remove(type + \":\" + recipient.id());\n\n        m.redraw();\n    }\n\n    /**\n     * Loads a recipient from the global store.\n     *\n     * @param store\n     * @param id\n     * @returns {Model}\n     */\n    findRecipient(store, id) {\n        return app.store.getById(store, id);\n    }\n}\n","import Modal from \"flarum/components/Modal\";\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\nimport Button from \"flarum/components/Button\";\nimport ItemList from \"flarum/utils/ItemList\";\nimport RecipientSearch from \"./RecipientSearch\";\nimport User from \"flarum/models/User\";\nimport Group from \"flarum/models/Group\";\n\nexport default class AddRecipientModal extends Modal {\n    init() {\n        super.init();\n\n        this.selected = m.prop(new ItemList);\n\n        if (this.props.discussion) {\n            // Adds recipients of the currently viewed discussion.\n            this.assignInitialRecipients(this.props.discussion);\n        } else if (this.props.selectedRecipients.toArray().length > 0) {\n            // Adds previously selected recipients.\n            this.selected().merge(this.props.selectedRecipients);\n        } else {\n            // Adds the current user in case there are no selected recipients yet and this is a new discussion.\n            this.selected().add(\"users:\" + app.session.user.id(), app.session.user);\n        }\n\n        this.recipientSearch = RecipientSearch.component({\n            selected: this.selected,\n            discussion: this.props.discussion\n        });\n    }\n\n    assignInitialRecipients(discussion) {\n        discussion.recipientUsers().map(user => {\n            this.selected().add(\"users:\" + user.id(), user);\n        });\n        discussion.recipientGroups().map(group => {\n            this.selected().add(\"groups:\" + group.id(), group);\n        });\n    }\n\n    className() {\n        return 'AddRecipientModal';\n    }\n\n    title() {\n        return this.props.discussion\n            ? app.translator.trans('fof-byobu.forum.modal.titles.update_recipients', {title: <em>{this.props.discussion.title()}</em>})\n            : app.translator.trans('fof-byobu.forum.modal.titles.add_recipients');\n    }\n\n    content() {\n\n        return [\n            <div className=\"Modal-body\">\n                <div className=\"AddRecipientModal-form\">\n                    {this.recipientSearch}\n                    <div className=\"AddRecipientModal-form-submit App-primaryControl\">\n                        {Button.component({\n                            type: 'submit',\n                            className: 'Button Button--primary',\n                            disabled: false,\n                            icon: 'fas fa-check',\n                            children: app.translator.trans('fof-byobu.forum.buttons.submit')\n                        })}\n                    </div>\n                </div>\n            </div>\n        ];\n    }\n\n    select(e) {\n        // Ctrl + Enter submits the selection, just Enter completes the current entry\n        if (e.metaKey || e.ctrlKey || this.selected.indexOf(this.index) !== -1) {\n            if (this.selected().length) {\n                this.$('form').submit();\n            }\n        }\n    }\n\n    onsubmit(e) {\n        e.preventDefault();\n\n        const discussion = this.props.discussion;\n        const recipients = this.selected();\n\n        let recipientGroups = [];\n        let recipientUsers = [];\n\n        recipients.toArray().forEach(recipient => {\n            if (recipient instanceof User) {\n                recipientUsers.push(recipient);\n            }\n            if (recipient instanceof Group) {\n                recipientGroups.push(recipient);\n            }\n        });\n\n        // Recipients are updated here for existing discussions here.\n        if (discussion) {\n            discussion.save({relationships: {recipientUsers, recipientGroups}})\n                .then(() => {\n                    if (app.current instanceof DiscussionPage) {\n                        app.current.stream.update();\n                    }\n                    m.redraw();\n                });\n        }\n\n        // Use the onsubmit callback to trigger an update in the DiscussionComposer\n        if (this.props.onsubmit) this.props.onsubmit(recipients);\n\n        app.modal.close();\n\n        m.redraw.strategy('none');\n    }\n}\n","export default function recipientCountLabel(count, attrs = {}) {\n  attrs.style = attrs.style || {};\n  attrs.className = 'RecipientLabel ' + (attrs.className || '');\n\n  var label = app.translator.transChoice('fof-byobu.forum.labels.recipients', count, {count});\n\n  return (\n    m('span', attrs,\n        <span className=\"RecipientLabel-text\">\n            {label}\n        </span>\n    )\n  );\n}\n","import {extend, override} from \"flarum/extend\";\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\nimport AddRecipientModal from \"./components/AddRecipientModal\";\nimport recipientCountLabel from \"../common/helpers/recipientCountLabel\";\nimport User from \"flarum/models/User\";\nimport Group from \"flarum/models/Group\";\nimport ItemList from \"flarum/utils/ItemList\";\n\nexport default function (app) {\n    // Add recipient-selection abilities to the discussion composer.\n    DiscussionComposer.prototype.recipients = new ItemList;\n    DiscussionComposer.prototype.recipientUsers = [];\n    DiscussionComposer.prototype.recipientGroups = [];\n\n    // Add a recipient selection modal when clicking the recipient tag label.\n    DiscussionComposer.prototype.chooseRecipients = function () {\n        app.modal.show(\n            new AddRecipientModal({\n                selectedRecipients: this.recipients,\n                onsubmit: (recipients) => {\n                    this.recipients = recipients;\n\n                    // Focus on recipient autocomplete field.\n                    this.$('.RecipientsInput').focus();\n                }\n            })\n        )\n    };\n\n    // Add a tag-selection menu to the discussion composer's header, after the\n    // title.\n    extend(DiscussionComposer.prototype, 'headerItems', function (items) {\n        if (app.session.user && app.forum.attribute('canStartPrivateDiscussion')) {\n\n            const recipients = this.recipients.toArray();\n\n            items.add('recipients', (\n                <a className=\"DiscussionComposer-changeRecipients\"\n                   onclick={this.chooseRecipients.bind(this)}>\n                    {recipients.length\n                        ? recipientCountLabel(recipients.length)\n                        : <span className=\"RecipientLabel none\">{app.translator.trans('fof-byobu.forum.buttons.add_recipients')}</span>}\n                </a>\n            ), 5);\n        }\n    });\n\n    // Add the selected tags as data to submit to the server.\n    extend(DiscussionComposer.prototype, 'data', function (data) {\n        const users = [];\n        const groups = [];\n        this.recipients.toArray().forEach(recipient => {\n\n            if (recipient instanceof User) {\n                users.push(recipient);\n            }\n\n            if (recipient instanceof Group) {\n                groups.push(recipient);\n            }\n        });\n\n        data.relationships = data.relationships || {};\n\n        if (users.length) {\n            data.relationships.recipientUsers = users;\n        }\n\n        if (groups.length) {\n            data.relationships.recipientGroups = groups;\n        }\n    });\n}\n","import extract from 'flarum/utils/extract';\nimport recipientLabel from './recipientLabel';\n\nexport default function recipientsLabel(recipients, attrs = {}) {\n  const children = [];\n  const link = extract(attrs, 'link');\n\n  attrs.className = 'RecipientsLabel ' + (attrs.className || '');\n\n  if (recipients) {\n      recipients.forEach(recipient => {\n          children.push(recipientLabel(recipient, {link}));\n      });\n  } else {\n    children.push(recipientLabel());\n  }\n\n  return <span {...attrs}>{children}</span>;\n}\n","import {extend} from \"flarum/extend\";\nimport DiscussionListItem from \"flarum/components/DiscussionListItem\";\nimport DiscussionPage from \"flarum/components/DiscussionPage\";\nimport DiscussionHero from \"flarum/components/DiscussionHero\";\nimport DiscussionList from \"flarum/components/DiscussionList\";\nimport recipientsLabel from \"../common/helpers/recipientsLabel\";\n\nexport default function() {\n\n    const addToDiscussion = function(discussion, items, long) {\n        let recipients = [];\n\n        if (discussion.recipientUsers().length) {\n            recipients = recipients.concat(discussion.recipientUsers());\n        }\n\n        if (discussion.recipientGroups().length) {\n            recipients = recipients.concat(discussion.recipientGroups());\n        }\n\n        if (recipients && recipients.length) {\n            if (long) {\n                items.add('recipients', recipientsLabel(recipients), 10);\n            } else {\n                items.add('recipients', recipientsLabel(recipients, {link: true}), 4);\n            }\n        }\n    };\n\n    /**\n     * Adds User labels on the discussion index page.\n     */\n    extend(DiscussionListItem.prototype, 'infoItems', function(items) {\n        const discussion = this.props.discussion;\n\n        addToDiscussion(discussion, items, true);\n    });\n\n    /**\n     * Require recipients from the API whenever we're loading a Discussion page.\n     */\n    extend(DiscussionPage.prototype, 'params', function(params) {\n        params.include.push('recipientUsers');\n        params.include.push('recipientGroups');\n    });\n    extend(DiscussionList.prototype, 'requestParams', function(params) {\n        params.include.push('recipientUsers');\n        params.include.push('recipientGroups');\n    });\n\n\n    /**\n     * Adds User labels on the discussion Hero.\n     */\n    extend(DiscussionHero.prototype, 'items', function(items) {\n        const discussion = this.props.discussion;\n\n        addToDiscussion(discussion, items, false);\n    });\n}\n","import { extend } from 'flarum/extend';\nimport DiscussionControls from 'flarum/utils/DiscussionControls';\nimport Button from 'flarum/components/Button';\n\nimport AddRecipientModal from './components/AddRecipientModal';\n\nexport default function() {\n    // Add a control allowing the discussion to be moved to another category.\n    extend(DiscussionControls, 'moderationControls', function(items, discussion) {\n        if (discussion.canEditRecipients()) {\n            items.add('recipients', Button.component({\n                children: app.translator.trans('fof-byobu.forum.buttons.edit_recipients'),\n                icon: 'far fa-map',\n                onclick: () => app.modal.show(new AddRecipientModal({discussion}))\n            }));\n        }\n    });\n}\n","import {extend} from \"flarum/extend\";\nimport Discussion from \"flarum/models/Discussion\";\nimport Badge from \"flarum/components/Badge\";\n\nexport default function addHasRecipientsBadge() {\n    extend(Discussion.prototype, 'badges', function (badges) {\n        if (this.recipientUsers().length || this.recipientGroups().length) {\n            badges.add('private', Badge.component({\n                type: 'private',\n                label: app.translator.trans('fof-byobu.forum.badges.is_private.tooltip'),\n                icon: 'fas fa-map'\n            }), 10);\n        }\n    });\n}\n","import {extend} from 'flarum/extend';\nimport UserControls from 'flarum/utils/UserControls';\nimport DiscussionComposer from \"flarum/components/DiscussionComposer\";\nimport Button from 'flarum/components/Button';\nimport ItemList from 'flarum/utils/ItemList';\n\nexport default function () {\n    // Add a control allowing the discussion to be moved to another category.\n    extend(UserControls, 'userControls', function (items, user) {\n        if (app.session.user &&\n            app.session.user.id() !== user.id() &&\n            app.forum.attribute('canStartPrivateDiscussion') &&\n            (user.blocksPd() === false || app.forum.attribute('canStartPrivateDiscussionWithBlockers'))\n        ) {\n            items.add('private-discussion', Button.component({\n                children: app.translator.trans('fof-byobu.forum.buttons.send_pd', {username: user.username()}),\n                icon: 'far fa-map',\n                onclick: () => {\n                    const deferred = m.deferred();\n\n                    let recipients = new ItemList();\n                    recipients.add('users:' + user.id(), user);\n                    recipients.add('users:' + app.session.user.id(), app.session.user);\n\n                    DiscussionComposer.prototype.recipients = recipients;\n\n                    const component = new DiscussionComposer({\n                        user: app.session.user,\n                        recipients: recipients,\n                        recipientUsers: recipients\n                    });\n\n                    app.composer.load(component);\n                    app.composer.show();\n\n                    deferred.resolve(component);\n\n                    return deferred.promise;\n                }\n            }));\n        }\n\n        return items;\n    });\n}\n","import {extend} from 'flarum/extend';\nimport SettingsPage from 'flarum/components/SettingsPage';\nimport Switch from \"flarum/components/Switch\";\n\nexport default function () {\n    extend(SettingsPage.prototype, 'privacyItems', function (items) {\n        items.add('byobu-block-dm',\n            Switch.component({\n                children: app.translator.trans('fof-byobu.forum.user.settings.block_pd'),\n                state: this.user.preferences().blocksPd,\n                onchange: (value, component) => this.preferenceSaver('blocksPd')(value, component)\n            })\n        )\n    });\n}\n","import DiscussionList from 'flarum/components/DiscussionList';\n\nexport default class PrivateDiscussionList extends DiscussionList\n{\n}\n","import UserPage from 'flarum/components/UserPage';\nimport PrivateDiscussionList from './PrivateDiscussionList';\n\nexport default class PrivateDiscussionsUserPage extends UserPage {\n    init() {\n        super.init();\n\n        this.loadUser(m.route.param('username'));\n\n        this.list = new PrivateDiscussionList({\n            params: {\n                q: `byobu:${this.user.username()} is:private`,\n                sort: 'newest'\n            }\n        });\n\n        this.list.refresh();\n    }\n\n    content() {\n        return (\n            <div className=\"DiscussionsUserPage\">\n                {this.list.render()}\n            </div>\n        );\n    }\n}\n","import {extend} from 'flarum/extend';\nimport UserPage from 'flarum/components/UserPage';\nimport LinkButton from 'flarum/components/LinkButton';\n\nimport PrivateDiscussionsUserPage from \"./components/PrivateDiscussionsUserPage\";\n\nexport default function () {\n    if (!Number(app.data['fof-byobu.enable_byobu_user_page'])) return;\n\n    app.routes['user.byobu'] = {path: '/u/:username/byobu', component: PrivateDiscussionsUserPage.component()};\n\n    extend(UserPage.prototype, 'navItems', function (items) {\n        items.add('byobu',\n            LinkButton.component({\n                href: app.route('user.byobu', {username: this.user.username()}),\n                children: app.translator.trans('fof-byobu.forum.user.byobu_link'),\n                icon: 'fas fa-map'\n            }),\n            85\n        );\n    })\n}\n","import { extend } from 'flarum/extend';\nimport Page from 'flarum/components/Page';\nimport ItemList from 'flarum/utils/ItemList';\nimport listItems from 'flarum/helpers/listItems';\nimport icon from 'flarum/helpers/icon';\nimport PrivateDiscussionList from './PrivateDiscussionList';\nimport WelcomeHero from 'flarum/components/WelcomeHero';\nimport DiscussionComposer from 'flarum/components/DiscussionComposer';\nimport LogInModal from 'flarum/components/LogInModal';\nimport DiscussionPage from 'flarum/components/DiscussionPage';\nimport Select from 'flarum/components/Select';\nimport Button from 'flarum/components/Button';\nimport LinkButton from 'flarum/components/LinkButton';\nimport SelectDropdown from 'flarum/components/SelectDropdown';\n\nexport default class PrivateDiscussionIndex extends Page\n{\n    init() {\n        super.init();\n\n        // If the user is returning from a discussion page, then take note of which\n        // discussion they have just visited. After the view is rendered, we will\n        // scroll down so that this discussion is in view.\n        if (app.previous instanceof DiscussionPage) {\n            this.lastDiscussion = app.previous.discussion;\n        }\n\n        // If the user is coming from the discussion list, then they have either\n        // just switched one of the parameters (filter, sort, search) or they\n        // probably want to refresh the results. We will clear the discussion list\n        // cache so that results are reloaded.\n        if (app.previous instanceof PrivateDiscussionIndex) {\n            app.cache.privateDiscussionList = null;\n        }\n\n        const params = this.params();\n\n        if (app.cache.privateDiscussionList) {\n            // Compare the requested parameters (sort, search query) to the ones that\n            // are currently present in the cached discussion list. If they differ, we\n            // will clear the cache and set up a new discussion list component with\n            // the new parameters.\n            Object.keys(params).some(key => {\n                if (app.cache.privateDiscussionList.props.params[key] !== params[key]) {\n                    app.cache.privateDiscussionList = null;\n                    return true;\n                }\n            });\n        }\n\n        if (!app.cache.privateDiscussionList) {\n            app.cache.privateDiscussionList = new PrivateDiscussionList({params});\n        }\n\n        app.history.push('private-index', icon('far fa-map'));\n\n        this.bodyClass = 'App--index';\n    }\n\n    onunload() {\n        // Save the scroll position so we can restore it when we return to the\n        // discussion list.\n        app.cache.scrollTop = $(window).scrollTop();\n    }\n\n    view() {\n        return (\n            <div className=\"IndexPage\">\n                {this.hero()}\n                <div className=\"container\">\n                    <nav className=\"IndexPage-nav sideNav\">\n                        <ul>{listItems(this.sidebarItems().toArray())}</ul>\n                    </nav>\n                    <div className=\"IndexPage-results sideNavOffset\">\n                        <div className=\"IndexPage-toolbar\">\n                            <ul className=\"IndexPage-toolbar-view\">{listItems(this.viewItems().toArray())}</ul>\n                            <ul className=\"IndexPage-toolbar-action\">{listItems(this.actionItems().toArray())}</ul>\n                        </div>\n                        {app.cache.discussionList.render()}\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    config(isInitialized, context) {\n        super.config(...arguments);\n\n        if (isInitialized) return;\n\n        extend(context, 'onunload', () => $('#app').css('min-height', ''));\n\n        app.setTitle('');\n        app.setTitleCount(0);\n\n        // Work out the difference between the height of this hero and that of the\n        // previous hero. Maintain the same scroll position relative to the bottom\n        // of the hero so that the sidebar doesn't jump around.\n        const oldHeroHeight = app.cache.heroHeight;\n        const heroHeight = app.cache.heroHeight = this.$('.Hero').outerHeight();\n        const scrollTop = app.cache.scrollTop;\n\n        $('#app').css('min-height', $(window).height() + heroHeight);\n\n        // Scroll to the remembered position. We do this after a short delay so that\n        // it happens after the browser has done its own \"back button\" scrolling,\n        // which isn't right. https://github.com/flarum/core/issues/835\n        const scroll = () => $(window).scrollTop(scrollTop - oldHeroHeight + heroHeight);\n        scroll();\n        setTimeout(scroll, 1);\n\n        // If we've just returned from a discussion page, then the constructor will\n        // have set the `lastDiscussion` property. If this is the case, we want to\n        // scroll down to that discussion so that it's in view.\n        if (this.lastDiscussion) {\n            const $discussion = this.$(`.DiscussionListItem[data-id=\"${this.lastDiscussion.id()}\"]`);\n\n            if ($discussion.length) {\n                const indexTop = $('#header').outerHeight();\n                const indexBottom = $(window).height();\n                const discussionTop = $discussion.offset().top;\n                const discussionBottom = discussionTop + $discussion.outerHeight();\n\n                if (discussionTop < scrollTop + indexTop || discussionBottom > scrollTop + indexBottom) {\n                    $(window).scrollTop(discussionTop - indexTop);\n                }\n            }\n        }\n    }\n\n    /**\n     * Get the component to display as the hero.\n     *\n     * @return {MithrilComponent}\n     */\n    hero() {\n        return WelcomeHero.component();\n    }\n\n    /**\n     * Build an item list for the sidebar of the index page. By default this is a\n     * \"New Discussion\" button, and then a DropdownSelect component containing a\n     * list of navigation items.\n     *\n     * @return {ItemList}\n     */\n    sidebarItems() {\n        const items = new ItemList();\n        const canStartDiscussion = app.forum.attribute('canStartDiscussion') || !app.session.user;\n\n        items.add('newDiscussion',\n            Button.component({\n                children: app.translator.trans(canStartDiscussion ? 'core.forum.index.start_discussion_button' : 'core.forum.index.cannot_start_discussion_button'),\n                icon: 'fas fa-edit',\n                className: 'Button Button--primary IndexPage-newDiscussion',\n                itemClassName: 'App-primaryControl',\n                onclick: this.newDiscussion.bind(this),\n                disabled: !canStartDiscussion\n            })\n        );\n\n        items.add('nav',\n            SelectDropdown.component({\n                children: this.navItems(this).toArray(),\n                buttonClassName: 'Button',\n                className: 'App-titleControl'\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the navigation in the sidebar of the index page. By\n     * default this is just the 'All Discussions' link.\n     *\n     * @return {ItemList}\n     */\n    navItems() {\n        const items = new ItemList();\n        const params = this.stickyParams();\n\n        items.add('allDiscussions',\n            LinkButton.component({\n                href: app.route('index', params),\n                children: app.translator.trans('core.forum.index.all_discussions_link'),\n                icon: 'far fa-comments'\n            }),\n            100\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the part of the toolbar which is concerned with how\n     * the results are displayed. By default this is just a select box to change\n     * the way discussions are sorted.\n     *\n     * @return {ItemList}\n     */\n    viewItems() {\n        const items = new ItemList();\n        const sortMap = app.cache.discussionList.sortMap();\n\n        const sortOptions = {};\n        for (const i in sortMap) {\n            sortOptions[i] = app.translator.trans('core.forum.index_sort.' + i + '_button');\n        }\n\n        items.add('sort',\n            Select.component({\n                options: sortOptions,\n                value: this.params().sort || Object.keys(sortMap)[0],\n                onchange: this.changeSort.bind(this)\n            })\n        );\n\n        return items;\n    }\n\n    /**\n     * Build an item list for the part of the toolbar which is about taking action\n     * on the results. By default this is just a \"mark all as read\" button.\n     *\n     * @return {ItemList}\n     */\n    actionItems() {\n        const items = new ItemList();\n\n        items.add('refresh',\n            Button.component({\n                title: app.translator.trans('core.forum.index.refresh_tooltip'),\n                icon: 'fas fa-refresh',\n                className: 'Button Button--icon',\n                onclick: () => app.cache.discussionList.refresh()\n            })\n        );\n\n        if (app.session.user) {\n            items.add('markAllAsRead',\n                Button.component({\n                    title: app.translator.trans('core.forum.index.mark_all_as_read_tooltip'),\n                    icon: 'fas fa-check',\n                    className: 'Button Button--icon',\n                    onclick: this.markAllAsRead.bind(this)\n                })\n            );\n        }\n\n        return items;\n    }\n\n    /**\n     * Return the current search query, if any. This is implemented to activate\n     * the search box in the header.\n     *\n     * @see Search\n     * @return {String}\n     */\n    searching() {\n        return this.params().q;\n    }\n\n    /**\n     * Redirect to the index page without a search filter. This is called when the\n     * 'x' is clicked in the search box in the header.\n     *\n     * @see Search\n     */\n    clearSearch() {\n        const params = this.params();\n        delete params.q;\n\n        m.route(app.route(this.props.routeName, params));\n    }\n\n    /**\n     * Redirect to the index page using the given sort parameter.\n     *\n     * @param {String} sort\n     */\n    changeSort(sort) {\n        const params = this.params();\n\n        if (sort === Object.keys(app.cache.discussionList.sortMap())[0]) {\n            delete params.sort;\n        } else {\n            params.sort = sort;\n        }\n\n        m.route(app.route(this.props.routeName, params));\n    }\n\n    /**\n     * Get URL parameters that stick between filter changes.\n     *\n     * @return {Object}\n     */\n    stickyParams() {\n        return {\n            sort: m.route.param('sort'),\n            q: m.route.param('q')\n        };\n    }\n\n    /**\n     * Get parameters to pass to the DiscussionList component.\n     *\n     * @return {Object}\n     */\n    params() {\n        const params = this.stickyParams();\n\n        params.filter = m.route.param('filter');\n\n        return params;\n    }\n\n    /**\n     * Log the user in and then open the composer for a new discussion.\n     *\n     * @return {Promise}\n     */\n    newDiscussion() {\n        const deferred = m.deferred();\n\n        if (app.session.user) {\n            this.composeNewDiscussion(deferred);\n        } else {\n            app.modal.show(\n                new LogInModal({\n                    onlogin: this.composeNewDiscussion.bind(this, deferred)\n                })\n            );\n        }\n\n        return deferred.promise;\n    }\n\n    /**\n     * Initialize the composer for a new discussion.\n     *\n     * @param {Deferred} deferred\n     * @return {Promise}\n     */\n    composeNewDiscussion(deferred) {\n        const component = new DiscussionComposer({user: app.session.user});\n\n        app.composer.load(component);\n        app.composer.show();\n\n        deferred.resolve(component);\n\n        return deferred.promise;\n    }\n\n    /**\n     * Mark all discussions as read.\n     *\n     * @return void\n     */\n    markAllAsRead() {\n        const confirmation = confirm(app.translator.trans('core.forum.index.mark_all_as_read_confirmation'));\n\n        if (confirmation) {\n            app.session.user.save({readTime: new Date()});\n        }\n    }\n}\n","import EventPost from \"flarum/components/EventPost\";\nimport recipientsLabel from \"../../common/helpers/recipientsLabel\";\n\nexport default class RecipientsModified extends EventPost {\n    static initProps(props) {\n        super.initProps(props);\n\n        function diff(diff1, diff2, store) {\n            return diff1\n                .filter(item => diff2.indexOf(item) === -1)\n                .map(id => app.store.getById(store, id));\n        }\n\n        const content = props.post.content();\n\n        // For event posts existing before groups functionality.\n        if (!content['new'] && content.length == 2) {\n            const oldRecipients = props.post.content()[0];\n            const newRecipients = props.post.content()[1];\n            props.added = diff(newRecipients, oldRecipients, 'users');\n            props.removed = diff(oldRecipients, newRecipients, 'users');\n        } else {\n            var usersAdded = diff(content['new']['users'], content['old']['users'], 'users');\n            var usersRemoved = diff(content['old']['users'], content['new']['users'], 'users');\n            var groupsAdded = diff(content['new']['groups'], content['old']['groups'], 'groups');\n            var groupsRemoved = diff(content['old']['groups'], content['new']['groups'], 'groups');\n\n            props.added = usersAdded.concat(groupsAdded);\n            props.removed = usersRemoved.concat(groupsRemoved);\n        }\n    }\n\n    icon() {\n        return 'far fa-map';\n    }\n\n    descriptionKey() {\n\n        var localeBase = 'fof-byobu.forum.post.recipients_modified.';\n\n        if (this.props.added.length) {\n            if (this.props.removed.length) {\n                return localeBase + 'added_and_removed';\n            }\n\n            return localeBase + 'added';\n        }\n\n        return localeBase + 'removed';\n    }\n\n    descriptionData() {\n        const data = {};\n\n        if (this.props.added.length) {\n            data.added = recipientsLabel(this.props.added, {link: true});\n        }\n\n        if (this.props.removed.length) {\n            data.removed = recipientsLabel(this.props.removed, {link: true});\n        }\n\n        return data;\n    }\n}\n","import Model from \"flarum/Model\";\nimport Discussion from \"flarum/models/Discussion\";\nimport User from \"flarum/models/User\";\nimport addRecipientComposer from \"./addRecipientComposer\";\nimport addRecipientLabels from \"./addRecipientLabels\";\nimport addRecipientsControl from \"./addRecipientsControl\";\nimport addHasRecipientsBadge from \"./addHasRecipientsBadge\";\nimport addDiscussPrivatelyControl from './addDiscussPrivatelyControl';\nimport addPrivacySetting from './addPrivacySetting';\nimport addPrivateDiscussionsPage from \"./addPrivateDiscussionsPage\";\n\nimport PrivateDiscussionIndex from \"./components/PrivateDiscussionIndex\";\nimport RecipientsModified from \"./components/RecipientsModified\";\n\napp.initializers.add('fof-byobu', function(app) {\n    app.routes.private_discussions = {path: '/private-discussions', component: PrivateDiscussionIndex.component()};\n\n    Discussion.prototype.recipientUsers = Model.hasMany('recipientUsers');\n    Discussion.prototype.oldRecipientUsers = Model.hasMany('oldRecipientUsers');\n    Discussion.prototype.recipientGroups = Model.hasMany('recipientGroups');\n    Discussion.prototype.oldRecipientGroups = Model.hasMany('oldRecipientGroups');\n\n    Discussion.prototype.canEditRecipients = Model.attribute('canEditRecipients');\n    Discussion.prototype.canEditUserRecipients = Model.attribute('canEditUserRecipients');\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\n    Discussion.prototype.canEditGroupRecipients = Model.attribute('canEditGroupRecipients');\n\n    User.prototype.blocksPd = Model.attribute('blocksPd');\n\n    app.postComponents.recipientsModified = RecipientsModified;\n\n    addRecipientComposer(app);\n    addRecipientLabels();\n    addRecipientsControl();\n    addHasRecipientsBadge();\n    addPrivacySetting();\n\n    addDiscussPrivatelyControl();\n\n    addPrivateDiscussionsPage();\n});\n","module.exports = flarum.core.compat['components/Modal'];","module.exports = flarum.core.compat['components/Search'];","module.exports = flarum.core.compat['helpers/avatar'];","module.exports = flarum.core.compat['utils/extractText'];","module.exports = flarum.core.compat['components/LoadingIndicator'];","module.exports = flarum.core.compat['components/DiscussionListItem'];","module.exports = flarum.core.compat['components/DiscussionHero'];","module.exports = flarum.core.compat['utils/DiscussionControls'];","module.exports = flarum.core.compat['components/Badge'];","module.exports = flarum.core.compat['utils/UserControls'];","module.exports = flarum.core.compat['components/SettingsPage'];","module.exports = flarum.core.compat['components/Page'];","module.exports = flarum.core.compat['helpers/icon'];","module.exports = flarum.core.compat['components/WelcomeHero'];","module.exports = flarum.core.compat['components/LogInModal'];","module.exports = flarum.core.compat['components/SelectDropdown'];","module.exports = flarum.core.compat['components/EventPost'];"],"sourceRoot":""}