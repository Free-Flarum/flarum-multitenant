{"version":3,"sources":["webpack://@fof/terms/webpack/bootstrap","webpack://@fof/terms/external \"flarum.core.compat['forum/app']\"","webpack://@fof/terms/external \"flarum.core.compat['common/Model']\"","webpack://@fof/terms/./src/common/helpers/sortByAttribute.js","webpack://@fof/terms/external \"flarum.core.compat['common/extend']\"","webpack://@fof/terms/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/terms/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/terms/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/terms/./node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js","webpack://@fof/terms/./node_modules/@babel/runtime/helpers/esm/defineProperty.js","webpack://@fof/terms/./src/common/models/Policy.js","webpack://@fof/terms/./src/common/models/index.js","webpack://@fof/terms/./src/common/helpers/index.js","webpack://@fof/terms/external \"flarum.core.compat['common/utils/computed']\"","webpack://@fof/terms/external \"flarum.core.compat['common/models/User']\"","webpack://@fof/terms/external \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/SignUpModal']\"","webpack://@fof/terms/external \"flarum.core.compat['common/components/Page']\"","webpack://@fof/terms/external \"flarum.core.compat['common/components/IndexPage']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/terms/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/Button']\"","webpack://@fof/terms/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@fof/terms/./src/forum/components/AcceptPoliciesModal.js","webpack://@fof/terms/./src/forum/components/UpdateAlert.js","webpack://@fof/terms/./src/forum/addUpdateAlert.js","webpack://@fof/terms/./src/forum/components/UserPoliciesStateModal.js","webpack://@fof/terms/./src/forum/components/index.js","webpack://@fof/terms/./src/forum/index.js","webpack://@fof/terms/./src/forum/addAcceptModal.js","webpack://@fof/terms/./src/forum/addFieldsToRegister.js","webpack://@fof/terms/./src/forum/addUserPoliciesStateControl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","items","attr","sort","a","b","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","_assertThisInitialized","self","ReferenceError","_defineProperty","obj","configurable","writable","Policy","Model","attribute","computed","id","apiEndpoint","this","exists","data","models","helpers","sortByAttribute","AcceptPoliciesModal","oninit","vnode","app","store","all","forEach","policy","form_key","title","translator","trans","content","body","policies","filter","state","session","user","fofTermsPoliciesState","has_update","length","Button","component","className","onclick","modal","close","map","forum","terms_updated_at","date","dayjs","format","update_message","type","checked","onchange","url","href","target","disabled","hadToAcceptToInteract","fofTermsPoliciesMustAccept","request","method","errorHandler","onerror","then","updated","pushPayload","window","location","reload","redraw","Modal","temporarilyHidden","UpdateAlert","shouldShowAlert","fofTermsPoliciesHasUpdate","view","controls","show","dismissControl","push","icon","listItems","concat","addAlertToContent","original","originalArgs","existing","additional","Array","isArray","unshift","UserPoliciesStateModal","username","attrs","accepted_at","humanTime","components","initializers","add","initialized","User","seeFoFTermsPoliciesState","extend","Page","current","matches","IndexPage","setTimeout","SignUpModal","fofTermsPolicies","fields","legalText","loading","override","DiscussionPage","UserPage","UserControls"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/Model'];","export default function (items, attr = 'sort') {\n    return items.sort((a, b) => a[attr]() - b[attr]());\n}\n","module.exports = flarum.core.compat['common/extend'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","module.exports = flarum.core.compat['common/components/Button'];","export default function _assertThisInitialized(self) {\n  if (self === void 0) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return self;\n}","export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import Model from 'flarum/common/Model';\nimport computed from 'flarum/common/utils/computed';\n\nexport default class Policy extends Model {\n    sort = Model.attribute('sort');\n    name = Model.attribute('name');\n    url = Model.attribute('url');\n    update_message = Model.attribute('update_message');\n    terms_updated_at = Model.attribute('terms_updated_at');\n    form_key = computed('id', (id) => 'fof_terms_policy_' + id);\n\n    apiEndpoint() {\n        return '/fof/terms/policies' + (this.exists ? '/' + this.data.id : '');\n    }\n}\n","import Policy from './Policy';\n\nexport const models = {\n    Policy,\n};\n","import sortByAttribute from './sortByAttribute';\n\nexport const helpers = {\n    sortByAttribute,\n};\n","module.exports = flarum.core.compat['common/utils/computed'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['forum/components/SignUpModal'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/IndexPage'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","module.exports = flarum.core.compat['forum/components/UserPage'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['forum/utils/UserControls'];","module.exports = flarum.core.compat['forum/components/Button'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport sortByAttribute from '../../common/helpers/sortByAttribute';\n\n/* global m, dayjs */\n\nexport default class AcceptPoliciesModal extends Modal {\n    oninit(vnode) {\n        super.oninit(vnode);\n\n        app.store.all('fof-terms-policies').forEach((policy) => {\n            this[policy.form_key()] = false;\n        });\n    }\n\n    title() {\n        return app.translator.trans('fof-terms.forum.accept-modal.title');\n    }\n\n    content() {\n        return m('.Modal-body', this.body());\n    }\n\n    body() {\n        const policies = sortByAttribute(\n            app.store.all('fof-terms-policies').filter((policy) => {\n                const state = app.session.user.fofTermsPoliciesState()[policy.id()];\n\n                return !state || state.has_update;\n            })\n        );\n\n        if (policies.length === 0) {\n            return Button.component(\n                {\n                    className: 'Button',\n                    onclick() {\n                        app.modal.close();\n                    },\n                },\n                app.translator.trans('fof-terms.forum.accept-modal.close')\n            );\n        }\n\n        return policies.map((policy) =>\n            m('div', [\n                m('h2', policy.name()),\n                app.forum.attribute('fof-terms.hide-updated-at')\n                    ? null\n                    : m(\n                          'p',\n                          policy.terms_updated_at()\n                              ? app.translator.trans('fof-terms.forum.accept-modal.updated-at', {\n                                    date: dayjs(policy.terms_updated_at()).format(app.forum.attribute('fof-terms.date-format')),\n                                })\n                              : app.translator.trans('fof-terms.forum.accept-modal.updated-recently')\n                      ),\n                policy.update_message() ? m('p', policy.update_message()) : null,\n                m(\n                    '.Form-group',\n                    m(\n                        '.FoF-Terms-Check.FoF-Terms-Check--login',\n                        m('label.checkbox', [\n                            m('input', {\n                                type: 'checkbox',\n                                checked: this[policy.form_key()],\n                                onchange: () => {\n                                    this[policy.form_key()] = !this[policy.form_key()];\n                                },\n                            }),\n                            app.translator.trans('fof-terms.forum.accept-modal.i-accept', {\n                                policy: policy.name(),\n                                a: policy.url()\n                                    ? m('a', {\n                                          href: policy.url(),\n                                          target: '_blank',\n                                      })\n                                    : m('span'),\n                            }),\n                        ])\n                    )\n                ),\n                Button.component(\n                    {\n                        className: 'Button Button--primary',\n                        disabled: !this[policy.form_key()],\n                        onclick: () => {\n                            // We need to save the \"must accept\" property before performing the request\n                            // Because an updated user serializer will be returned\n                            const hadToAcceptToInteract = app.session.user.fofTermsPoliciesMustAccept();\n\n                            app.request({\n                                url: app.forum.attribute('apiUrl') + policy.apiEndpoint() + '/accept',\n                                method: 'POST',\n                                errorHandler: this.onerror.bind(this),\n                            }).then((updated) => {\n                                app.store.pushPayload(updated);\n\n                                // If this was the last policy to accept, close the modal\n                                if (policies.length === 1) {\n                                    if (hadToAcceptToInteract) {\n                                        // If the user was previously not allowed to interact with the forum,\n                                        // we refresh to get updated permissions in the frontend\n                                        window.location.reload();\n                                    } else {\n                                        app.modal.close();\n                                    }\n                                }\n\n                                m.redraw();\n                            });\n                        },\n                    },\n                    app.translator.trans('fof-terms.forum.accept-modal.accept')\n                ),\n            ])\n        );\n    }\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport listItems from 'flarum/common/helpers/listItems';\nimport AcceptPoliciesModal from './AcceptPoliciesModal';\n\n/* global m */\n\nlet temporarilyHidden = false;\n\n/**\n * Renders similarly to Flarum's Alert, but with an additional .container inside\n */\nexport default class UpdateAlert {\n    shouldShowAlert() {\n        if (temporarilyHidden) {\n            return false;\n        }\n\n        const user = app.session.user;\n\n        return user && user.fofTermsPoliciesHasUpdate();\n    }\n\n    view() {\n        if (!this.shouldShowAlert()) {\n            return m('div');\n        }\n\n        const controls = [\n            Button.component(\n                {\n                    className: 'Button Button--link',\n                    onclick: () => {\n                        app.modal.show(AcceptPoliciesModal);\n                    },\n                },\n                app.translator.trans('fof-terms.forum.update-alert.review')\n            ),\n        ];\n\n        const dismissControl = [];\n\n        if (!app.session.user.fofTermsPoliciesMustAccept()) {\n            dismissControl.push(\n                Button.component({\n                    icon: 'fas fa-times',\n                    className: 'Button Button--link Button--icon Alert-dismiss',\n                    onclick: () => {\n                        temporarilyHidden = true;\n                    },\n                })\n            );\n        }\n\n        return m(\n            '.Alert.Alert-info',\n            m('.container', [\n                m(\n                    'span.Alert-body',\n                    app.session.user.fofTermsPoliciesMustAccept()\n                        ? app.translator.trans('fof-terms.forum.update-alert.must-accept-message')\n                        : app.translator.trans('fof-terms.forum.update-alert.can-accept-message')\n                ),\n                m('ul.Alert-controls', listItems(controls.concat(dismissControl))),\n            ])\n        );\n    }\n}\n","import { override } from 'flarum/common/extend';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport UpdateAlert from './components/UpdateAlert';\n\n/* global m */\n\n// This single method will be used to inject the alert into existing components\n// If the view is already an array, we add our content at the start\n// If it isn't an array we wrap the content into a new array\nfunction addAlertToContent(original, ...originalArgs) {\n    const existing = original(...originalArgs);\n    const additional = m(UpdateAlert);\n\n    // if the existing content is an array, add to it\n    // This should only happen with the hero() override as other extensions might return an array there\n    if (Array.isArray(existing)) {\n        existing.unshift(additional);\n\n        return existing;\n    }\n\n    // Otherwise return a new list of elements\n    // Use a container div otherwise when extending view() this will prevent the config() method from running\n    // as the Component class won't be able to bind config() to an array\n    // We could also add to vnode.children but this could cause weird styling if another extension or custom styles\n    // change the look of the base page content by targeting the original view root element based on its class\n    // By using a new outer container we make sure the alert always stays full width and unaffected by the page view under it\n    return m('div', [additional, existing]);\n}\n\nexport default function () {\n    // There's no single place we can inject the banner\n    // So we use a few different points so it's visible on most pages\n    override(IndexPage.prototype, 'hero', addAlertToContent);\n    override(DiscussionPage.prototype, 'view', addAlertToContent);\n\n    // Covers user profile and settings\n    override(UserPage.prototype, 'view', addAlertToContent);\n}\n","import app from 'flarum/forum/app';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport Modal from 'flarum/common/components/Modal';\nimport sortByAttribute from '../../common/helpers/sortByAttribute';\n\n/* global m */\n\nexport default class UserPoliciesStateModal extends Modal {\n    title() {\n        return app.translator.trans('fof-terms.forum.state-modal.title', {\n            username: this.attrs.user.username(),\n        });\n    }\n\n    content() {\n        return m(\n            '.Modal-body',\n            m(\n                'ul',\n                sortByAttribute(app.store.all('fof-terms-policies')).map((policy) => {\n                    const state = this.attrs.user.fofTermsPoliciesState()[policy.id()];\n\n                    return m('li', [\n                        policy.name() + ': ',\n                        state && state.accepted_at\n                            ? app.translator.trans('fof-terms.forum.state-modal.accepted-at', {\n                                  date: humanTime(state.accepted_at),\n                              })\n                            : app.translator.trans('fof-terms.forum.state-modal.not-accepted'),\n                    ]);\n                })\n            )\n        );\n    }\n}\n","import AcceptPoliciesModal from './AcceptPoliciesModal';\nimport UpdateAlert from './UpdateAlert';\nimport UserPoliciesStateModal from './UserPoliciesStateModal';\n\nexport const components = {\n    AcceptPoliciesModal,\n    UpdateAlert,\n    UserPoliciesStateModal,\n};\n","import app from 'flarum/forum/app';\nimport Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\nimport Policy from '../common/models/Policy';\nimport addAcceptModal from './addAcceptModal';\nimport addFieldsToRegister from './addFieldsToRegister';\nimport addUpdateAlert from './addUpdateAlert';\nimport addUserPoliciesStateControl from './addUserPoliciesStateControl';\n\nexport * from './components';\nexport * from '../common/models';\nexport * from '../common/helpers';\n\napp.initializers.add('fof-terms', () => {\n    app.store.models['fof-terms-policies'] = Policy;\n\n    User.prototype.fofTermsPoliciesState = Model.attribute('fofTermsPoliciesState');\n    User.prototype.fofTermsPoliciesHasUpdate = Model.attribute('fofTermsPoliciesHasUpdate');\n    User.prototype.fofTermsPoliciesMustAccept = Model.attribute('fofTermsPoliciesMustAccept');\n    User.prototype.seeFoFTermsPoliciesState = Model.attribute('seeFoFTermsPoliciesState');\n\n    addAcceptModal();\n    addFieldsToRegister();\n    addUpdateAlert();\n    addUserPoliciesStateControl();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\nimport IndexPage from 'flarum/common/components/IndexPage';\nimport AcceptPoliciesModal from './components/AcceptPoliciesModal';\n\nexport default function () {\n    let initialized = false;\n\n    extend(Page.prototype, 'oninit', function () {\n        if (initialized) {\n            return;\n        }\n\n        // We only show the modal if the first page loaded was the index page\n        // And that new updates are available\n        // And that the user *must* accept them\n        if (app.current.matches(IndexPage)) {\n            const user = app.session.user;\n\n            if (user && user.fofTermsPoliciesMustAccept()) {\n                // Timeout is necessary because there is a redraw error otherwise\n                setTimeout(() => {\n                    app.modal.show(AcceptPoliciesModal);\n                }, 0);\n            }\n        }\n\n        initialized = true;\n    });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport SignUpModal from 'flarum/forum/components/SignUpModal';\nimport sortByAttribute from '../common/helpers/sortByAttribute';\n\n/* global m */\n\nexport default function () {\n    extend(SignUpModal.prototype, 'oninit', function () {\n        this.fofTermsPolicies = sortByAttribute(app.store.all('fof-terms-policies'));\n\n        this.fofTermsPolicies.forEach((policy) => {\n            this[policy.form_key()] = false;\n        });\n    });\n\n    extend(SignUpModal.prototype, 'fields', function (fields) {\n        const legalText = app.forum.attribute('fof-terms.signup-legal-text');\n\n        if (legalText) {\n            fields.add('fof-terms-legal-text', m('.Form-group', m('.FoF-Terms-SignUp-Legal.Alert', legalText)));\n        }\n\n        this.fofTermsPolicies.forEach((policy) => {\n            fields.add(\n                'fof-terms-policy-' + policy.id(),\n                m(\n                    '.Form-group',\n                    m(\n                        '.FoF-Terms-Check.FoF-Terms-Check--signup',\n                        m('label.checkbox', [\n                            m('input', {\n                                type: 'checkbox',\n                                checked: this[policy.form_key()],\n                                onchange: () => {\n                                    this[policy.form_key()] = !this[policy.form_key()];\n                                },\n                                disabled: this.loading,\n                            }),\n                            app.translator.trans('fof-terms.forum.signup.i-accept', {\n                                policy: policy.name(),\n                                a: policy.url()\n                                    ? m('a', {\n                                          href: policy.url(),\n                                          target: '_blank',\n                                      })\n                                    : m('span'),\n                            }),\n                        ])\n                    )\n                )\n            );\n        });\n    });\n\n    extend(SignUpModal.prototype, 'submitData', function (data) {\n        this.fofTermsPolicies.forEach((policy) => {\n            data[policy.form_key()] = this[policy.form_key()];\n        });\n    });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport Button from 'flarum/forum/components/Button';\nimport UserPoliciesStateModal from './components/UserPoliciesStateModal';\n\nexport default function () {\n    extend(UserControls, 'moderationControls', (items, user) => {\n        if (app.forum.attribute('fof-terms.canSeeUserPoliciesState')) {\n            items.add(\n                'fof-terms.state',\n                Button.component(\n                    {\n                        icon: 'fas fa-paperclip',\n                        onclick() {\n                            app.modal.show(UserPoliciesStateModal, { user });\n                        },\n                    },\n                    app.translator.trans('fof-terms.forum.user_controls.state_button')\n                )\n            );\n        }\n    });\n}\n"],"sourceRoot":""}