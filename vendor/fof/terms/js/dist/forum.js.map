{"version":3,"sources":["webpack://@fof/terms/webpack/bootstrap","webpack://@fof/terms/external \"flarum.core.compat['forum/app']\"","webpack://@fof/terms/external \"flarum.core.compat['common/Model']\"","webpack://@fof/terms/./src/common/helpers/sortByAttribute.js","webpack://@fof/terms/external \"flarum.core.compat['common/components/Button']\"","webpack://@fof/terms/external \"flarum.core.compat['common/extend']\"","webpack://@fof/terms/./node_modules/@babel/runtime/helpers/esm/setPrototypeOf.js","webpack://@fof/terms/./node_modules/@babel/runtime/helpers/esm/inheritsLoose.js","webpack://@fof/terms/./src/common/models/Policy.js","webpack://@fof/terms/./src/common/models/index.js","webpack://@fof/terms/./src/common/helpers/index.js","webpack://@fof/terms/external \"flarum.core.compat['common/utils/computed']\"","webpack://@fof/terms/external \"flarum.core.compat['common/models/User']\"","webpack://@fof/terms/external \"flarum.core.compat['common/components/Modal']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/SignUpModal']\"","webpack://@fof/terms/external \"flarum.core.compat['common/components/Page']\"","webpack://@fof/terms/external \"flarum.core.compat['common/components/IndexPage']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/IndexPage']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/DiscussionPage']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/components/UserPage']\"","webpack://@fof/terms/external \"flarum.core.compat['common/helpers/listItems']\"","webpack://@fof/terms/external \"flarum.core.compat['forum/utils/UserControls']\"","webpack://@fof/terms/external \"flarum.core.compat['common/helpers/humanTime']\"","webpack://@fof/terms/./src/forum/components/AcceptPoliciesModal.js","webpack://@fof/terms/./src/forum/components/UpdateAlert.js","webpack://@fof/terms/./src/forum/addUpdateAlert.js","webpack://@fof/terms/./src/forum/components/UserPoliciesStateModal.js","webpack://@fof/terms/./src/forum/components/index.js","webpack://@fof/terms/./src/forum/index.js","webpack://@fof/terms/./src/forum/addAcceptModal.js","webpack://@fof/terms/./src/forum/addFieldsToRegister.js","webpack://@fof/terms/./src/forum/addUserPoliciesStateControl.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","flarum","core","compat","items","attr","sort","a","b","_setPrototypeOf","setPrototypeOf","__proto__","_inheritsLoose","subClass","superClass","constructor","Policy","Model","attribute","url","update_message","terms_updated_at","form_key","computed","id","apiEndpoint","this","exists","data","models","helpers","sortByAttribute","AcceptPoliciesModal","oninit","vnode","app","store","all","forEach","policy","title","translator","trans","content","body","policies","filter","state","session","user","fofTermsPoliciesState","has_update","length","Button","component","className","onclick","modal","close","map","forum","date","dayjs","format","type","checked","onchange","href","target","disabled","hadToAcceptToInteract","fofTermsPoliciesMustAccept","request","method","errorHandler","onerror","then","updated","pushPayload","window","location","reload","redraw","Modal","temporarilyHidden","UpdateAlert","shouldShowAlert","fofTermsPoliciesHasUpdate","view","controls","show","dismissControl","push","icon","listItems","concat","addAlertToContent","original","originalArgs","existing","additional","Array","isArray","unshift","UserPoliciesStateModal","username","attrs","accepted_at","humanTime","components","initializers","add","initialized","User","seeFoFTermsPoliciesState","extend","Page","current","matches","IndexPage","setTimeout","SignUpModal","fofTermsPolicies","fields","legalText","loading","override","DiscussionPage","UserPage","UserControls"],"mappings":"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","file":"forum.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 28);\n","module.exports = flarum.core.compat['forum/app'];","module.exports = flarum.core.compat['common/Model'];","export default function (items, attr = 'sort') {\n  return items.sort((a, b) => a[attr]() - b[attr]());\n}\n","module.exports = flarum.core.compat['common/components/Button'];","module.exports = flarum.core.compat['common/extend'];","export default function _setPrototypeOf(o, p) {\n  _setPrototypeOf = Object.setPrototypeOf || function _setPrototypeOf(o, p) {\n    o.__proto__ = p;\n    return o;\n  };\n\n  return _setPrototypeOf(o, p);\n}","import setPrototypeOf from \"./setPrototypeOf.js\";\nexport default function _inheritsLoose(subClass, superClass) {\n  subClass.prototype = Object.create(superClass.prototype);\n  subClass.prototype.constructor = subClass;\n  setPrototypeOf(subClass, superClass);\n}","import Model from 'flarum/common/Model';\nimport computed from 'flarum/common/utils/computed';\n\nexport default class Policy extends Model {\n  sort = Model.attribute('sort');\n  name = Model.attribute('name');\n  url = Model.attribute('url');\n  update_message = Model.attribute('update_message');\n  terms_updated_at = Model.attribute('terms_updated_at');\n  form_key = computed('id', (id) => 'fof_terms_policy_' + id);\n\n  apiEndpoint() {\n    return '/fof/terms/policies' + (this.exists ? '/' + this.data.id : '');\n  }\n}\n","import Policy from './Policy';\n\nexport const models = {\n  Policy,\n};\n","import sortByAttribute from './sortByAttribute';\n\nexport const helpers = {\n  sortByAttribute,\n};\n","module.exports = flarum.core.compat['common/utils/computed'];","module.exports = flarum.core.compat['common/models/User'];","module.exports = flarum.core.compat['common/components/Modal'];","module.exports = flarum.core.compat['forum/components/SignUpModal'];","module.exports = flarum.core.compat['common/components/Page'];","module.exports = flarum.core.compat['common/components/IndexPage'];","module.exports = flarum.core.compat['forum/components/IndexPage'];","module.exports = flarum.core.compat['forum/components/DiscussionPage'];","module.exports = flarum.core.compat['forum/components/UserPage'];","module.exports = flarum.core.compat['common/helpers/listItems'];","module.exports = flarum.core.compat['forum/utils/UserControls'];","module.exports = flarum.core.compat['common/helpers/humanTime'];","import app from 'flarum/forum/app';\nimport Modal from 'flarum/common/components/Modal';\nimport Button from 'flarum/common/components/Button';\nimport sortByAttribute from '../../common/helpers/sortByAttribute';\n\n/* global m, dayjs */\n\nexport default class AcceptPoliciesModal extends Modal {\n  oninit(vnode) {\n    super.oninit(vnode);\n\n    app.store.all('fof-terms-policies').forEach((policy) => {\n      this[policy.form_key()] = false;\n    });\n  }\n\n  title() {\n    return app.translator.trans('fof-terms.forum.accept-modal.title');\n  }\n\n  content() {\n    return m('.Modal-body', this.body());\n  }\n\n  body() {\n    const policies = sortByAttribute(\n      app.store.all('fof-terms-policies').filter((policy) => {\n        const state = app.session.user.fofTermsPoliciesState()[policy.id()];\n\n        return !state || state.has_update;\n      })\n    );\n\n    if (policies.length === 0) {\n      return Button.component(\n        {\n          className: 'Button',\n          onclick() {\n            app.modal.close();\n          },\n        },\n        app.translator.trans('fof-terms.forum.accept-modal.close')\n      );\n    }\n\n    return policies.map((policy) =>\n      m('div', [\n        m('h2', policy.name()),\n        app.forum.attribute('fof-terms.hide-updated-at')\n          ? null\n          : m(\n              'p',\n              policy.terms_updated_at()\n                ? app.translator.trans('fof-terms.forum.accept-modal.updated-at', {\n                    date: dayjs(policy.terms_updated_at()).format(app.forum.attribute('fof-terms.date-format')),\n                  })\n                : app.translator.trans('fof-terms.forum.accept-modal.updated-recently')\n            ),\n        policy.update_message() ? m('p', policy.update_message()) : null,\n        m(\n          '.Form-group',\n          m(\n            '.FoF-Terms-Check.FoF-Terms-Check--login',\n            m('label.checkbox', [\n              m('input', {\n                type: 'checkbox',\n                checked: this[policy.form_key()],\n                onchange: () => {\n                  this[policy.form_key()] = !this[policy.form_key()];\n                },\n              }),\n              app.translator.trans('fof-terms.forum.accept-modal.i-accept', {\n                policy: policy.name(),\n                a: policy.url()\n                  ? m('a', {\n                      href: policy.url(),\n                      target: '_blank',\n                    })\n                  : m('span'),\n              }),\n            ])\n          )\n        ),\n        Button.component(\n          {\n            className: 'Button Button--primary',\n            disabled: !this[policy.form_key()],\n            onclick: () => {\n              // We need to save the \"must accept\" property before performing the request\n              // Because an updated user serializer will be returned\n              const hadToAcceptToInteract = app.session.user.fofTermsPoliciesMustAccept();\n\n              app\n                .request({\n                  url: app.forum.attribute('apiUrl') + policy.apiEndpoint() + '/accept',\n                  method: 'POST',\n                  errorHandler: this.onerror.bind(this),\n                })\n                .then((updated) => {\n                  app.store.pushPayload(updated);\n\n                  // If this was the last policy to accept, close the modal\n                  if (policies.length === 1) {\n                    if (hadToAcceptToInteract) {\n                      // If the user was previously not allowed to interact with the forum,\n                      // we refresh to get updated permissions in the frontend\n                      window.location.reload();\n                    } else {\n                      app.modal.close();\n                    }\n                  }\n\n                  m.redraw();\n                });\n            },\n          },\n          app.translator.trans('fof-terms.forum.accept-modal.accept')\n        ),\n      ])\n    );\n  }\n}\n","import app from 'flarum/forum/app';\nimport Button from 'flarum/common/components/Button';\nimport listItems from 'flarum/common/helpers/listItems';\nimport AcceptPoliciesModal from './AcceptPoliciesModal';\n\n/* global m */\n\nlet temporarilyHidden = false;\n\n/**\n * Renders similarly to Flarum's Alert, but with an additional .container inside\n */\nexport default class UpdateAlert {\n  shouldShowAlert() {\n    if (temporarilyHidden) {\n      return false;\n    }\n\n    const user = app.session.user;\n\n    return user && user.fofTermsPoliciesHasUpdate();\n  }\n\n  view() {\n    if (!this.shouldShowAlert()) {\n      return m('div');\n    }\n\n    const controls = [\n      Button.component(\n        {\n          className: 'Button Button--link',\n          onclick: () => {\n            app.modal.show(AcceptPoliciesModal);\n          },\n        },\n        app.translator.trans('fof-terms.forum.update-alert.review')\n      ),\n    ];\n\n    const dismissControl = [];\n\n    if (!app.session.user.fofTermsPoliciesMustAccept()) {\n      dismissControl.push(\n        Button.component({\n          icon: 'fas fa-times',\n          className: 'Button Button--link Button--icon Alert-dismiss',\n          onclick: () => {\n            temporarilyHidden = true;\n          },\n        })\n      );\n    }\n\n    return m(\n      '.Alert.Alert-info',\n      m('.container', [\n        m(\n          'span.Alert-body',\n          app.session.user.fofTermsPoliciesMustAccept()\n            ? app.translator.trans('fof-terms.forum.update-alert.must-accept-message')\n            : app.translator.trans('fof-terms.forum.update-alert.can-accept-message')\n        ),\n        m('ul.Alert-controls', listItems(controls.concat(dismissControl))),\n      ])\n    );\n  }\n}\n","import { override } from 'flarum/common/extend';\nimport IndexPage from 'flarum/forum/components/IndexPage';\nimport DiscussionPage from 'flarum/forum/components/DiscussionPage';\nimport UserPage from 'flarum/forum/components/UserPage';\nimport UpdateAlert from './components/UpdateAlert';\n\n/* global m */\n\n// This single method will be used to inject the alert into existing components\n// If the view is already an array, we add our content at the start\n// If it isn't an array we wrap the content into a new array\nfunction addAlertToContent(original, ...originalArgs) {\n  const existing = original(...originalArgs);\n  const additional = m(UpdateAlert);\n\n  // if the existing content is an array, add to it\n  // This should only happen with the hero() override as other extensions might return an array there\n  if (Array.isArray(existing)) {\n    existing.unshift(additional);\n\n    return existing;\n  }\n\n  // Otherwise return a new list of elements\n  // Use a container div otherwise when extending view() this will prevent the config() method from running\n  // as the Component class won't be able to bind config() to an array\n  // We could also add to vnode.children but this could cause weird styling if another extension or custom styles\n  // change the look of the base page content by targeting the original view root element based on its class\n  // By using a new outer container we make sure the alert always stays full width and unaffected by the page view under it\n  return m('div', [additional, existing]);\n}\n\nexport default function () {\n  // There's no single place we can inject the banner\n  // So we use a few different points so it's visible on most pages\n  override(IndexPage.prototype, 'hero', addAlertToContent);\n  override(DiscussionPage.prototype, 'view', addAlertToContent);\n\n  // Covers user profile and settings\n  override(UserPage.prototype, 'view', addAlertToContent);\n}\n","import app from 'flarum/forum/app';\nimport humanTime from 'flarum/common/helpers/humanTime';\nimport Modal from 'flarum/common/components/Modal';\nimport sortByAttribute from '../../common/helpers/sortByAttribute';\n\n/* global m */\n\nexport default class UserPoliciesStateModal extends Modal {\n  title() {\n    return app.translator.trans('fof-terms.forum.state-modal.title', {\n      username: this.attrs.user.username(),\n    });\n  }\n\n  content() {\n    return m(\n      '.Modal-body',\n      m(\n        'ul',\n        sortByAttribute(app.store.all('fof-terms-policies')).map((policy) => {\n          const state = this.attrs.user.fofTermsPoliciesState()[policy.id()];\n\n          return m('li', [\n            policy.name() + ': ',\n            state && state.accepted_at\n              ? app.translator.trans('fof-terms.forum.state-modal.accepted-at', {\n                  date: humanTime(state.accepted_at),\n                })\n              : app.translator.trans('fof-terms.forum.state-modal.not-accepted'),\n          ]);\n        })\n      )\n    );\n  }\n}\n","import AcceptPoliciesModal from './AcceptPoliciesModal';\nimport UpdateAlert from './UpdateAlert';\nimport UserPoliciesStateModal from './UserPoliciesStateModal';\n\nexport const components = {\n  AcceptPoliciesModal,\n  UpdateAlert,\n  UserPoliciesStateModal,\n};\n","import app from 'flarum/forum/app';\nimport Model from 'flarum/common/Model';\nimport User from 'flarum/common/models/User';\nimport Policy from '../common/models/Policy';\nimport addAcceptModal from './addAcceptModal';\nimport addFieldsToRegister from './addFieldsToRegister';\nimport addUpdateAlert from './addUpdateAlert';\nimport addUserPoliciesStateControl from './addUserPoliciesStateControl';\n\nexport * from './components';\nexport * from '../common/models';\nexport * from '../common/helpers';\n\napp.initializers.add('fof-terms', () => {\n  app.store.models['fof-terms-policies'] = Policy;\n\n  User.prototype.fofTermsPoliciesState = Model.attribute('fofTermsPoliciesState');\n  User.prototype.fofTermsPoliciesHasUpdate = Model.attribute('fofTermsPoliciesHasUpdate');\n  User.prototype.fofTermsPoliciesMustAccept = Model.attribute('fofTermsPoliciesMustAccept');\n  User.prototype.seeFoFTermsPoliciesState = Model.attribute('seeFoFTermsPoliciesState');\n\n  addAcceptModal();\n  addFieldsToRegister();\n  addUpdateAlert();\n  addUserPoliciesStateControl();\n});\n","import app from 'flarum/forum/app';\nimport { extend } from 'flarum/common/extend';\nimport Page from 'flarum/common/components/Page';\nimport IndexPage from 'flarum/common/components/IndexPage';\nimport AcceptPoliciesModal from './components/AcceptPoliciesModal';\n\nexport default function () {\n  let initialized = false;\n\n  extend(Page.prototype, 'oninit', function () {\n    if (initialized) {\n      return;\n    }\n\n    // We only show the modal if the first page loaded was the index page\n    // And that new updates are available\n    // And that the user *must* accept them\n    if (app.current.matches(IndexPage)) {\n      const user = app.session.user;\n\n      if (user && user.fofTermsPoliciesMustAccept()) {\n        // Timeout is necessary because there is a redraw error otherwise\n        setTimeout(() => {\n          app.modal.show(AcceptPoliciesModal);\n        }, 0);\n      }\n    }\n\n    initialized = true;\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport SignUpModal from 'flarum/forum/components/SignUpModal';\nimport sortByAttribute from '../common/helpers/sortByAttribute';\n\n/* global m */\n\nexport default function () {\n  extend(SignUpModal.prototype, 'oninit', function () {\n    this.fofTermsPolicies = sortByAttribute(app.store.all('fof-terms-policies'));\n\n    this.fofTermsPolicies.forEach((policy) => {\n      this[policy.form_key()] = false;\n    });\n  });\n\n  extend(SignUpModal.prototype, 'fields', function (fields) {\n    const legalText = app.forum.attribute('fof-terms.signup-legal-text');\n\n    if (legalText) {\n      fields.add('fof-terms-legal-text', m('.Form-group', m('.FoF-Terms-SignUp-Legal.Alert', legalText)));\n    }\n\n    this.fofTermsPolicies.forEach((policy) => {\n      fields.add(\n        'fof-terms-policy-' + policy.id(),\n        m(\n          '.Form-group',\n          m(\n            '.FoF-Terms-Check.FoF-Terms-Check--signup',\n            m('label.checkbox', [\n              m('input', {\n                type: 'checkbox',\n                checked: this[policy.form_key()],\n                onchange: () => {\n                  this[policy.form_key()] = !this[policy.form_key()];\n                },\n                disabled: this.loading,\n              }),\n              app.translator.trans('fof-terms.forum.signup.i-accept', {\n                policy: policy.name(),\n                a: policy.url()\n                  ? m('a', {\n                      href: policy.url(),\n                      target: '_blank',\n                    })\n                  : m('span'),\n              }),\n            ])\n          )\n        )\n      );\n    });\n  });\n\n  extend(SignUpModal.prototype, 'submitData', function (data) {\n    this.fofTermsPolicies.forEach((policy) => {\n      data[policy.form_key()] = this[policy.form_key()];\n    });\n  });\n}\n","import { extend } from 'flarum/common/extend';\nimport app from 'flarum/forum/app';\nimport UserControls from 'flarum/forum/utils/UserControls';\nimport Button from 'flarum/common/components/Button';\nimport UserPoliciesStateModal from './components/UserPoliciesStateModal';\n\nexport default function () {\n  extend(UserControls, 'moderationControls', (items, user) => {\n    if (app.forum.attribute('fof-terms.canSeeUserPoliciesState')) {\n      items.add(\n        'fof-terms.state',\n        Button.component(\n          {\n            icon: 'fas fa-paperclip',\n            onclick() {\n              app.modal.show(UserPoliciesStateModal, { user });\n            },\n          },\n          app.translator.trans('fof-terms.forum.user_controls.state_button')\n        )\n      );\n    }\n  });\n}\n"],"sourceRoot":""}